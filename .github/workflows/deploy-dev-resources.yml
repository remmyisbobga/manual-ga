name: "Terraform CI/CD - Dev Environment"

on:
  push:
    branches: [ "feat/**" ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
      resource_type:
        description: 'Resource type to deploy'
        required: true
        default: '00resources'
        type: choice
        options:
          - "00resources"
          - "01networking"
          - "02security"
          - "03databases"
          - "04compute"

permissions:
  contents: read

jobs:
  validate:
    name: Validate Dev Environment
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init & Validate All Dev Modules
        run: |
          for dir in envs/01dev/*; do
            echo "Validating $dir"
            cd "$dir"
            terraform init -backend=false
            terraform fmt -check
            terraform validate
            cd - > /dev/null
          done

  plan:
    name: Plan Dev Resources
    if: github.ref != 'refs/heads/main'
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        resource: [ "00resources", "01networking", "02security", "03databases", "04compute" ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Plan - Dev ${{ matrix.resource }}
        run: |
          cd envs/01dev/${{ matrix.resource }}
          terraform init
          terraform plan -out=tfplan-${{ matrix.resource }}

      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-${{ matrix.resource }}
          path: envs/01dev/${{ matrix.resource }}/tfplan-${{ matrix.resource }}

  deploy:
    name: Deploy Dev - ${{ github.event.inputs.resource_type }}
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.base_ref == 'main')
    runs-on: ubuntu-latest
    concurrency:
      group: "dev-${{ github.event.inputs.resource_type }}"
      cancel-in-progress: false
    environment:
      name: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init & Apply
        run: |
          cd envs/01dev/${{ github.event.inputs.resource_type }}
          terraform init
          terraform apply -auto-approve -var-file=env.auto.tfvars
